{"ast":null,"code":"import React,{useCallback,useState}from'react';import QuestionAnswer from'./QuestionAnswer';import Navigation from'./Navigation';import{gradients,questionsList}from'./data';import Confetti from'./Confetti';import DynamicStyleUpdater from'./DynamicStyleUpdater';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[meanValue,setMeanValue]=useState(0);const[showConfetti,setShowConfetti]=useState(false);const[selectedOptions,setSelectedOptions]=useState(questionsList.map(()=>[])// Initialize empty arrays for each question\n);{/* Question Logic */}const isLastQuestion=currentQuestionIndex===questionsList.length-1;const handleNextQuestion=()=>{if(isLastQuestion){// Trigger confetti on the last question\nsetShowConfetti(true);}setCurrentQuestionIndex(prevIndex=>Math.min(prevIndex+1,questionsList.length-1));};const handlePreviousQuestion=()=>{if(currentQuestionIndex!=0){setCurrentQuestionIndex(prevIndex=>Math.max(prevIndex-1,0));}};{/* Answer Logic */}const handleAnswerSelect=indices=>{setSelectedOptions(prevSelectedOptions=>{const updatedSelectedOptions=[...prevSelectedOptions];updatedSelectedOptions[currentQuestionIndex]=indices;// Update selected options for the current question\nreturn updatedSelectedOptions;});};const handleMeanValueChange=useCallback(mean=>{setMeanValue(mean);},[]);const allAnswersCorrect=meanValue===1;const getBackgroundStyle=()=>{if(meanValue<0.5){return{background:gradients[0].gradient};}else if(meanValue>=0.5&&meanValue<1){return{background:gradients[1].gradient};}else if(meanValue===1){return{background:gradients[2].gradient};}return{background:'white',color:'black'};};{/* Navigation Logic */}const nextButtonText=isLastQuestion?\"End Quiz\":\"Next Question\";const showAdvanceButton=!(questionsList.length===0);const showPreviousButton=!(currentQuestionIndex===0);const currentQuestionAnswer=questionsList[currentQuestionIndex];return/*#__PURE__*/_jsxs(\"div\",{id:\"Container\",children:[/*#__PURE__*/_jsx(Confetti,{trigger:showConfetti}),/*#__PURE__*/_jsx(DynamicStyleUpdater,{getStyle:getBackgroundStyle,triggerCondition:meanValue,elementSelector:\"body\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center\",children:[/*#__PURE__*/_jsx(QuestionAnswer,{questionAnswer:currentQuestionAnswer,onMeanValueChange:handleMeanValueChange,onAnswerSelect:handleAnswerSelect,disableAnswering:allAnswersCorrect,userSelectedIndices:selectedOptions[currentQuestionIndex]}),/*#__PURE__*/_jsx(Navigation,{showAdvanceButton:showAdvanceButton,showPreviousButton:showPreviousButton,advanceButtonText:nextButtonText,previousButtonText:\"Previous Question\",onAdvance:handleNextQuestion,onPrevious:handlePreviousQuestion,disableAdvance:!(meanValue===1)||isLastQuestion&&!allAnswersCorrect})]},'Question'+String(currentQuestionIndex))]});};export default App;","map":{"version":3,"names":["React","useCallback","useState","QuestionAnswer","Navigation","gradients","questionsList","Confetti","DynamicStyleUpdater","jsx","_jsx","jsxs","_jsxs","App","currentQuestionIndex","setCurrentQuestionIndex","meanValue","setMeanValue","showConfetti","setShowConfetti","selectedOptions","setSelectedOptions","map","isLastQuestion","length","handleNextQuestion","prevIndex","Math","min","handlePreviousQuestion","max","handleAnswerSelect","indices","prevSelectedOptions","updatedSelectedOptions","handleMeanValueChange","mean","allAnswersCorrect","getBackgroundStyle","background","gradient","color","nextButtonText","showAdvanceButton","showPreviousButton","currentQuestionAnswer","id","children","trigger","getStyle","triggerCondition","elementSelector","className","questionAnswer","onMeanValueChange","onAnswerSelect","disableAnswering","userSelectedIndices","advanceButtonText","previousButtonText","onAdvance","onPrevious","disableAdvance","String"],"sources":["/Users/aoifemcloughlin/react_toggle_quiz_project/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport QuestionAnswer from './QuestionAnswer'\nimport Navigation from './Navigation';\nimport { gradients, questionsList } from './data';\nimport Confetti from './Confetti';\nimport DynamicStyleUpdater from './DynamicStyleUpdater';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [meanValue, setMeanValue] = useState<number>(0);\n  const [showConfetti, setShowConfetti] = useState<boolean>(false);\n  const [selectedOptions, setSelectedOptions] = useState<number[][]>(\n    questionsList.map(() => []) // Initialize empty arrays for each question\n  );\n\n  {/* Question Logic */}\n  const isLastQuestion = currentQuestionIndex === questionsList.length - 1;\n\n  const handleNextQuestion = () => {\n    if (isLastQuestion) {\n      // Trigger confetti on the last question\n      setShowConfetti(true);\n    }\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questionsList.length - 1));\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex != 0) {\n    setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    }\n  };\n\n  {/* Answer Logic */}\n  const handleAnswerSelect = (indices: number[]) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedSelectedOptions = [...prevSelectedOptions];\n      updatedSelectedOptions[currentQuestionIndex] = indices; // Update selected options for the current question\n      return updatedSelectedOptions;\n    });\n  };\n\n  const handleMeanValueChange = useCallback((mean: number) => {\n    setMeanValue(mean);\n  }, []);\n\n  const allAnswersCorrect = (meanValue === 1);\n\n  const getBackgroundStyle = () => {\n    if (meanValue < 0.5) {\n      return { background: gradients[0].gradient};\n    } else if (meanValue >= 0.5 && meanValue < 1) {\n      return { background: gradients[1].gradient};\n    } else if (meanValue === 1) {\n      return { background: gradients[2].gradient};\n    }\n    return { background: 'white', color: 'black' };\n  };\n\n  {/* Navigation Logic */}\n  const nextButtonText = isLastQuestion ? \"End Quiz\" : \"Next Question\";\n  const showAdvanceButton = !(questionsList.length === 0);\n  const showPreviousButton = !(currentQuestionIndex === 0);\n  const currentQuestionAnswer = questionsList[currentQuestionIndex];\n\n  return (\n    <div id=\"Container\">\n      {/* Conditionally render the Confetti component */}\n      <Confetti trigger={showConfetti} />\n\n      {/* Background changer component with flexible condition */}\n      <DynamicStyleUpdater\n        getStyle={getBackgroundStyle}\n        triggerCondition={meanValue}\n        elementSelector='body' />\n\n      {/* Display Questions and Answers */}\n      <div key={'Question' + String(currentQuestionIndex)} className='flex flex-col items-center'>\n        <QuestionAnswer\n          questionAnswer={currentQuestionAnswer}\n          onMeanValueChange={handleMeanValueChange}\n          onAnswerSelect={handleAnswerSelect}\n          disableAnswering={allAnswersCorrect}\n          userSelectedIndices={selectedOptions[currentQuestionIndex]}\n        />\n\n        {/* Navigate through QuestionAnswerSet's */}\n        <Navigation\n          showAdvanceButton={showAdvanceButton}\n          showPreviousButton={showPreviousButton}\n          advanceButtonText={nextButtonText}\n          previousButtonText=\"Previous Question\"\n          onAdvance={handleNextQuestion}\n          onPrevious={handlePreviousQuestion}\n          disableAdvance={!(meanValue === 1) || isLastQuestion && !allAnswersCorrect}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}