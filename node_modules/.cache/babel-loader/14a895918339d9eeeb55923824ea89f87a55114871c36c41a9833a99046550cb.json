{"ast":null,"code":"var _jsxFileName = \"/Users/aoifemcloughlin/react_toggle_quiz_project/src/ToggleAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleAnswer = ({\n  options,\n  onMeanValueChange,\n  disable,\n  selectedIndex\n}) => {\n  _s();\n  const toggleRef = useRef(null);\n  const [selectedOptionSize, setSelectedOptionSize] = useState({\n    width: '0',\n    height: '0'\n  });\n  const calculateTranslateValue = index => {\n    const toggleElement = toggleRef.current;\n    if (!toggleElement) return '0px';\n    const screenWidth = window.innerWidth;\n    const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n    const selectedOptionSizeValue = containerSize / options.length;\n    if (screenWidth < 764) {\n      return `translateY(${index * selectedOptionSizeValue}px)`;\n    } else {\n      return `translateX(${index * selectedOptionSizeValue}px)`;\n    }\n  };\n  const handleOptionClick = optionValue => {\n    if (!disable) {\n      onMeanValueChange(optionValue); // Notify parent with selected value\n    }\n  };\n  useEffect(() => {\n    const toggleElement = toggleRef.current;\n    if (toggleElement) {\n      const screenWidth = window.innerWidth;\n      const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n      const selectedOptionSizeValue = containerSize / options.length;\n      setSelectedOptionSize({\n        width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n        height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`\n      });\n    }\n    const handleResize = () => {\n      if (toggleRef.current) {\n        const toggleElement = toggleRef.current;\n        const screenWidth = window.innerWidth;\n        const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n        const selectedOptionSizeValue = containerSize / options.length;\n        setSelectedOptionSize({\n          width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n          height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [options.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" w-[90vw] sm:w-[60vw] h-24[vh] sm:h-[15vh] border-white border-2 rounded-full grid sm:flex text-center items-center relative mb-4\",\n    ref: toggleRef,\n    children: [options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl flex-1 font-bold z-10\",\n      onClick: () => handleOptionClick(index),\n      style: {\n        color: selectedIndex === index ? '#645d57' : 'white',\n        cursor: disable ? 'not-allowed' : 'pointer'\n      },\n      children: option.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-full absolute z-0 bg-slate-50/50 transition-transform duration-300 ease-in-out transition-width transition-height\",\n      style: {\n        transform: calculateTranslateValue(selectedIndex),\n        width: selectedOptionSize.width,\n        height: selectedOptionSize.height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleAnswer, \"PddFPWrg7QmPBzHIcuEj+ENuE1I=\");\n_c = ToggleAnswer;\nexport default ToggleAnswer;\nvar _c;\n$RefreshReg$(_c, \"ToggleAnswer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ToggleAnswer","options","onMeanValueChange","disable","selectedIndex","_s","toggleRef","selectedOptionSize","setSelectedOptionSize","width","height","calculateTranslateValue","index","toggleElement","current","screenWidth","window","innerWidth","containerSize","clientHeight","clientWidth","selectedOptionSizeValue","length","handleOptionClick","optionValue","handleResize","addEventListener","removeEventListener","className","ref","children","map","option","onClick","style","color","cursor","label","fileName","_jsxFileName","lineNumber","columnNumber","transform","_c","$RefreshReg$"],"sources":["/Users/aoifemcloughlin/react_toggle_quiz_project/src/ToggleAnswer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\ninterface Option {\n  label: string;\n  value: number;\n}\n\ninterface ToggleAnswerProps {\n  options: Option[];\n  onMeanValueChange: (value: number) => void;\n  disable: boolean;\n  selectedIndex: number; // Pass the selected value directly\n}\n\nconst ToggleAnswer: React.FC<ToggleAnswerProps> = ({\n  options,\n  onMeanValueChange,\n  disable,\n  selectedIndex,\n}) => {\n  const toggleRef = useRef<HTMLDivElement | null>(null);\n  const [selectedOptionSize, setSelectedOptionSize] = useState<{ width: string; height: string }>({ width: '0', height: '0' });\n\n  const calculateTranslateValue = (index: number): string => {\n    const toggleElement = toggleRef.current;\n    if (!toggleElement) return '0px';\n\n    const screenWidth = window.innerWidth;\n    const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n    const selectedOptionSizeValue = containerSize / options.length;\n\n    if (screenWidth < 764) {\n      return `translateY(${index * selectedOptionSizeValue}px)`;\n    } else {\n      return `translateX(${index * selectedOptionSizeValue}px)`;\n    }\n  };\n\n  const handleOptionClick = (optionValue: number) => {\n    if (!disable) {\n      onMeanValueChange(optionValue); // Notify parent with selected value\n    }\n  };\n\n  useEffect(() => {\n    const toggleElement = toggleRef.current;\n    if (toggleElement) {\n      const screenWidth = window.innerWidth;\n      const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n      const selectedOptionSizeValue = containerSize / options.length;\n\n      setSelectedOptionSize({\n        width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n        height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`,\n      });\n    }\n\n    const handleResize = () => {\n      if (toggleRef.current) {\n        const toggleElement = toggleRef.current;\n        const screenWidth = window.innerWidth;\n        const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n        const selectedOptionSizeValue = containerSize / options.length;\n\n        setSelectedOptionSize({\n          width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n          height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`,\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [options.length]);\n\n  return (\n    <div className=\" w-[90vw] sm:w-[60vw] h-24[vh] sm:h-[15vh] border-white border-2 rounded-full grid sm:flex text-center items-center relative mb-4\" ref={toggleRef}>\n      {options.map((option, index) => (\n        <div\n          key={index}\n          className=\"text-xl flex-1 font-bold z-10\"\n          onClick={() => handleOptionClick(index)}\n          style={{\n            color: selectedIndex === index ? '#645d57' : 'white',\n            cursor: disable ? 'not-allowed' : 'pointer',\n          }}\n        >\n          {option.label}\n        </div>\n      ))}\n      <div className=\"rounded-full absolute z-0 bg-slate-50/50 transition-transform duration-300 ease-in-out transition-width transition-height\"\n        style={{\n          transform: calculateTranslateValue(selectedIndex),\n          width: selectedOptionSize.width,\n          height: selectedOptionSize.height,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ToggleAnswer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}