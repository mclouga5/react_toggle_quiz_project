{"ast":null,"code":"var _jsxFileName = \"/Users/aoifemcloughlin/react_toggle_quiz_project/src/ToggleAnswer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleAnswer = ({\n  options,\n  onMeanValueChange,\n  disable,\n  selectedIndex\n}) => {\n  _s();\n  const toggleRef = useRef(null);\n  const [selectedOptionSize, setSelectedOptionSize] = useState({\n    width: '0',\n    height: '0'\n  });\n  const calculateTranslateValue = index => {\n    const toggleElement = toggleRef.current;\n    if (!toggleElement) return '0px';\n    const screenWidth = window.innerWidth;\n    const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n    const selectedOptionSizeValue = containerSize / options.length;\n    return screenWidth < 764 ? `translateY(${index * selectedOptionSizeValue}px)` : `translateX(${index * selectedOptionSizeValue}px)`;\n  };\n  const handleOptionClick = optionValue => {\n    if (!disable) {\n      onMeanValueChange(optionValue);\n    }\n  };\n  useEffect(() => {\n    const toggleElement = toggleRef.current;\n    if (toggleElement) {\n      const screenWidth = window.innerWidth;\n      const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n      const selectedOptionSizeValue = containerSize / options.length;\n      setSelectedOptionSize({\n        width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n        height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`\n      });\n    }\n    const handleResize = () => {\n      if (toggleRef.current) {\n        const toggleElement = toggleRef.current;\n        const screenWidth = window.innerWidth;\n        const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n        const selectedOptionSizeValue = containerSize / options.length;\n        setSelectedOptionSize({\n          width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n          height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [options.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[90vw] sm:w-[60vw] h-[24vh] sm:h-[15vh] flex justify-center items-center border-2 border-white rounded-lg relative mb-2\",\n    ref: toggleRef,\n    children: [options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 text-center text-2xl font-semibold ${selectedIndex === index ? 'text-[#645d57]' : 'text-white'} cursor-pointer`,\n      onClick: () => handleOptionClick(option.value),\n      children: option.label\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute rounded-lg shadow-lg transition-all duration-300 bg-white/50 z-0\",\n      style: {\n        transform: calculateTranslateValue(selectedIndex),\n        width: selectedOptionSize.width,\n        height: selectedOptionSize.height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleAnswer, \"CwyRbWuvHlKhRDPCDiDsjM69EUk=\");\n_c = ToggleAnswer;\nexport default ToggleAnswer;\nvar _c;\n$RefreshReg$(_c, \"ToggleAnswer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ToggleAnswer","options","onMeanValueChange","disable","selectedIndex","_s","toggleRef","selectedOptionSize","setSelectedOptionSize","width","height","calculateTranslateValue","index","toggleElement","current","screenWidth","window","innerWidth","containerSize","clientHeight","clientWidth","selectedOptionSizeValue","length","handleOptionClick","optionValue","handleResize","addEventListener","removeEventListener","className","ref","children","map","option","onClick","value","label","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","_c","$RefreshReg$"],"sources":["/Users/aoifemcloughlin/react_toggle_quiz_project/src/ToggleAnswer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\ninterface Option {\n  label: string;\n  value: number;\n}\n\ninterface ToggleAnswerProps {\n  options: Option[];\n  onMeanValueChange: (value: number) => void;\n  disable: boolean;\n  selectedIndex: number;\n}\n\nconst ToggleAnswer: React.FC<ToggleAnswerProps> = ({\n  options,\n  onMeanValueChange,\n  disable,\n  selectedIndex,\n}) => {\n  const toggleRef = useRef<HTMLDivElement | null>(null);\n  const [selectedOptionSize, setSelectedOptionSize] = useState<{ width: string; height: string }>({\n    width: '0',\n    height: '0',\n  });\n\n  const calculateTranslateValue = (index: number): string => {\n    const toggleElement = toggleRef.current;\n    if (!toggleElement) return '0px';\n\n    const screenWidth = window.innerWidth;\n    const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n    const selectedOptionSizeValue = containerSize / options.length;\n\n    return screenWidth < 764\n      ? `translateY(${index * selectedOptionSizeValue}px)`\n      : `translateX(${index * selectedOptionSizeValue}px)`;\n  };\n\n  const handleOptionClick = (optionValue: number) => {\n    if (!disable) {\n      onMeanValueChange(optionValue);\n    }\n  };\n\n  useEffect(() => {\n    const toggleElement = toggleRef.current;\n    if (toggleElement) {\n      const screenWidth = window.innerWidth;\n      const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n      const selectedOptionSizeValue = containerSize / options.length;\n\n      setSelectedOptionSize({\n        width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n        height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`,\n      });\n    }\n\n    const handleResize = () => {\n      if (toggleRef.current) {\n        const toggleElement = toggleRef.current;\n        const screenWidth = window.innerWidth;\n        const containerSize = screenWidth < 764 ? toggleElement.clientHeight : toggleElement.clientWidth;\n        const selectedOptionSizeValue = containerSize / options.length;\n\n        setSelectedOptionSize({\n          width: screenWidth < 764 ? '90vw' : `${selectedOptionSizeValue}px`,\n          height: screenWidth < 764 ? `${100 / options.length}%` : `${toggleElement.clientHeight}px`,\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [options.length]);\n\n  return (\n    <div\n      className=\"w-[90vw] sm:w-[60vw] h-[24vh] sm:h-[15vh] flex justify-center items-center border-2 border-white rounded-lg relative mb-2\"\n      ref={toggleRef}\n    >\n      {options.map((option, index) => (\n        <div\n          key={index}\n          className={`flex-1 text-center text-2xl font-semibold ${\n            selectedIndex === index ? 'text-[#645d57]' : 'text-white'\n          } cursor-pointer`}\n          onClick={() => handleOptionClick(option.value)}\n        >\n          {option.label}\n        </div>\n      ))}\n      <div\n        className=\"absolute rounded-lg shadow-lg transition-all duration-300 bg-white/50 z-0\"\n        style={{\n          transform: calculateTranslateValue(selectedIndex),\n          width: selectedOptionSize.width,\n          height: selectedOptionSize.height,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ToggleAnswer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}