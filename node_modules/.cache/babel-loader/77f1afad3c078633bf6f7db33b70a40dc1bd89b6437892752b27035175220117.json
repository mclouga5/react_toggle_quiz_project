{"ast":null,"code":"var _jsxFileName = \"/Users/aoifemcloughlin/react_toggle_quiz_project/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport QuestionAnswer from './QuestionAnswer';\nimport Navigation from './Navigation';\nimport { gradients, questionsList } from './data';\nimport Confetti from './Confetti';\nimport DynamicStyleUpdater from './DynamicStyleUpdater';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [meanValue, setMeanValue] = useState(0);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState(questionsList.map(() => []) // Initialize empty arrays for each question\n  );\n  {/* Question Logic */}\n  const isLastQuestion = currentQuestionIndex === questionsList.length - 1;\n  const handleNextQuestion = () => {\n    if (isLastQuestion) {\n      // Trigger confetti on the last question\n      setShowConfetti(true);\n    }\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questionsList.length - 1));\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex != 0) {\n      setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    }\n  };\n  {/* Answer Logic */}\n  const handleAnswerSelect = indices => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedSelectedOptions = [...prevSelectedOptions];\n      updatedSelectedOptions[currentQuestionIndex] = indices; // Update selected options for the current question\n      return updatedSelectedOptions;\n    });\n  };\n  const handleMeanValueChange = useCallback(mean => {\n    setMeanValue(mean);\n  }, []);\n  const allAnswersCorrect = meanValue === 1;\n  const getBackgroundStyle = () => {\n    if (meanValue < 0.5) {\n      return {\n        background: gradients[0].gradient\n      };\n    } else if (meanValue >= 0.5 && meanValue < 1) {\n      return {\n        background: gradients[1].gradient\n      };\n    } else if (meanValue === 1) {\n      return {\n        background: gradients[2].gradient\n      };\n    }\n    return {\n      background: 'white',\n      color: 'black'\n    };\n  };\n  {/* Navigation Logic */}\n  const nextButtonText = isLastQuestion ? \"End Quiz\" : \"Next Question\";\n  const showAdvanceButton = !(questionsList.length === 0);\n  const showPreviousButton = !(currentQuestionIndex === 0);\n  const currentQuestionAnswer = questionsList[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(Confetti, {\n      trigger: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicStyleUpdater, {\n      getStyle: getBackgroundStyle,\n      triggerCondition: meanValue,\n      elementSelector: \"body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QuestionAnswer, {\n        questionAnswer: currentQuestionAnswer,\n        onMeanValueChange: handleMeanValueChange,\n        onAnswerSelect: handleAnswerSelect,\n        disableAnswering: allAnswersCorrect,\n        userSelectedIndices: selectedOptions[currentQuestionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        showAdvanceButton: showAdvanceButton,\n        showPreviousButton: showPreviousButton,\n        advanceButtonText: nextButtonText,\n        previousButtonText: \"Previous Question\",\n        onAdvance: handleNextQuestion,\n        onPrevious: handlePreviousQuestion,\n        disableAdvance: !(meanValue === 1) || isLastQuestion && !allAnswersCorrect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, 'Question' + String(currentQuestionIndex), true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-500 text-red-500 p-4\",\n      children: \"Test Tailwind CSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CfjA77WHnhUKsPdhoo7H0q0Zeec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","QuestionAnswer","Navigation","gradients","questionsList","Confetti","DynamicStyleUpdater","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","meanValue","setMeanValue","showConfetti","setShowConfetti","selectedOptions","setSelectedOptions","map","isLastQuestion","length","handleNextQuestion","prevIndex","Math","min","handlePreviousQuestion","max","handleAnswerSelect","indices","prevSelectedOptions","updatedSelectedOptions","handleMeanValueChange","mean","allAnswersCorrect","getBackgroundStyle","background","gradient","color","nextButtonText","showAdvanceButton","showPreviousButton","currentQuestionAnswer","id","children","trigger","fileName","_jsxFileName","lineNumber","columnNumber","getStyle","triggerCondition","elementSelector","questionAnswer","onMeanValueChange","onAnswerSelect","disableAnswering","userSelectedIndices","advanceButtonText","previousButtonText","onAdvance","onPrevious","disableAdvance","String","className","_c","$RefreshReg$"],"sources":["/Users/aoifemcloughlin/react_toggle_quiz_project/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport QuestionAnswer from './QuestionAnswer'\nimport Navigation from './Navigation';\nimport { gradients, questionsList } from './data';\nimport Confetti from './Confetti';\nimport DynamicStyleUpdater from './DynamicStyleUpdater';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState<number>(0);\n  const [meanValue, setMeanValue] = useState<number>(0);\n  const [showConfetti, setShowConfetti] = useState<boolean>(false);\n  const [selectedOptions, setSelectedOptions] = useState<number[][]>(\n    questionsList.map(() => []) // Initialize empty arrays for each question\n  );\n\n  {/* Question Logic */}\n  const isLastQuestion = currentQuestionIndex === questionsList.length - 1;\n\n  const handleNextQuestion = () => {\n    if (isLastQuestion) {\n      // Trigger confetti on the last question\n      setShowConfetti(true);\n    }\n    setCurrentQuestionIndex(prevIndex => Math.min(prevIndex + 1, questionsList.length - 1));\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex != 0) {\n    setCurrentQuestionIndex(prevIndex => Math.max(prevIndex - 1, 0));\n    }\n  };\n\n  {/* Answer Logic */}\n  const handleAnswerSelect = (indices: number[]) => {\n    setSelectedOptions(prevSelectedOptions => {\n      const updatedSelectedOptions = [...prevSelectedOptions];\n      updatedSelectedOptions[currentQuestionIndex] = indices; // Update selected options for the current question\n      return updatedSelectedOptions;\n    });\n  };\n\n  const handleMeanValueChange = useCallback((mean: number) => {\n    setMeanValue(mean);\n  }, []);\n\n  const allAnswersCorrect = (meanValue === 1);\n\n  const getBackgroundStyle = () => {\n    if (meanValue < 0.5) {\n      return { background: gradients[0].gradient};\n    } else if (meanValue >= 0.5 && meanValue < 1) {\n      return { background: gradients[1].gradient};\n    } else if (meanValue === 1) {\n      return { background: gradients[2].gradient};\n    }\n    return { background: 'white', color: 'black' };\n  };\n\n  {/* Navigation Logic */}\n  const nextButtonText = isLastQuestion ? \"End Quiz\" : \"Next Question\";\n  const showAdvanceButton = !(questionsList.length === 0);\n  const showPreviousButton = !(currentQuestionIndex === 0);\n  const currentQuestionAnswer = questionsList[currentQuestionIndex];\n\n  return (\n    <div id=\"Container\">\n      {/* Conditionally render the Confetti component */}\n      <Confetti trigger={showConfetti} />\n\n      {/* Background changer component with flexible condition */}\n      <DynamicStyleUpdater\n        getStyle={getBackgroundStyle}\n        triggerCondition={meanValue}\n        elementSelector='body' />\n\n      {/* Display Questions and Answers */}\n      <div key={'Question' + String(currentQuestionIndex)}>\n        <QuestionAnswer\n          questionAnswer={currentQuestionAnswer}\n          onMeanValueChange={handleMeanValueChange}\n          onAnswerSelect={handleAnswerSelect}\n          disableAnswering={allAnswersCorrect}\n          userSelectedIndices={selectedOptions[currentQuestionIndex]}\n        />\n\n        {/* Navigate through QuestionAnswerSet's */}\n        <Navigation\n          showAdvanceButton={showAdvanceButton}\n          showPreviousButton={showPreviousButton}\n          advanceButtonText={nextButtonText}\n          previousButtonText=\"Previous Question\"\n          onAdvance={handleNextQuestion}\n          onPrevious={handlePreviousQuestion}\n          disableAdvance={!(meanValue === 1) || isLastQuestion && !allAnswersCorrect}\n        />\n      </div>\n\n      <div className=\"bg-blue-500 text-red-500 p-4\">\n    Test Tailwind CSS\n  </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}